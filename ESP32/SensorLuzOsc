/*
Programa para el ESP32 que enciende un LED en el modo de "hola mundo"
AUTOR: Mario García
Fecha de creacion: 14/02/2024
*/
#include "driver/gpio.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"

//constantes
#define Sensorosc 25 
#define sensorluz 25
#define OFF 4 //Botón
#define BUZZER 22


//funciones
esp_err_t pin_initialize();

void app_main(void)
{ 
    int caso = 0;
    int boton=0;

    pin_initialize(); //llamamos nuestra funcion para inicializar puertos 
    
    while(1){

        boton=gpio_get_level(OFF);

        if (boton==1){
            caso++;
        }
        
        switch(caso){

            case 1:
            if (sensorluz == 1){
            gpio_set_level(BUZZER, 1);

        }else{
              //comprobamos que nuestra alarma siga a pagada si no detecta nada 
            gpio_set_level(BUZZER, 0);
        }
            break;

            case 2:
             if (Sensorosc == 1){
            gpio_set_level(BUZZER, 1);

        }else{
              //comprobamos que nuestra alarma siga a pagada si no detecta nada 
            gpio_set_level(BUZZER, 0);
        }
            break;

            default:
            caso = 0;
            break;
        }
    }
}



//la siguiente es una funcion para inicialisar el pin  del led Y BUZZER para que funcione como salida  y sensor ir y off como entrada
esp_err_t pin_initialize() {
    gpio_reset_pin(Sensorosc);
    gpio_set_direction(Sensorosc, GPIO_MODE_INPUT);

    gpio_reset_pin(BUZZER);
    gpio_set_direction(BUZZER, GPIO_MODE_OUTPUT);

    gpio_reset_pin(sensorluz);
    gpio_set_direction(sensorluz, GPIO_MODE_INPUT);

    gpio_reset_pin(OFF);
    gpio_set_direction(OFF, GPIO_MODE_INPUT);

    return ESP_OK;
}
